{"version":3,"sources":["components/layout/SignedInLink.js","store/Action/authAction.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectsSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/Signin.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/Action/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","logout","getState","getFirebase","auth","signOut","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","uid","SignedInLink","SignedOutLink","Notification","notifications","map","item","key","id","user","content","time","toDate","toLocaleString","ProjectsSummary","project","title","authorFirstName","authorLastName","createdAt","toLocaleDateString","ProjectList","projects","Dashboard","this","Component","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","ownProps","match","params","data","toDateString","Signin","email","password","onSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newuser","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","error","CreateProject","createProject","history","push","authorId","add","Date","App","path","exact","component","ProjectDetails","SignIn","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","fbConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","userProfile","useFirestoreForProfile","initializeApp","analytics","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5a4700e.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/Action/authAction\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className='right'>\r\n      <li>\r\n        <NavLink to='/create'>New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.logout}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn=(credentials)=>{\r\n    //because of thunk, we can hold the dispatch process and return a function instead\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n          credentials.email,\r\n          credentials.password  \r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'LOGIN_ERROR',err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut=()=>{\r\n    return (dispatch,getState,{ getFirebase})=>{\r\n        const firebase=getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n// if you got an error after loggint out and FirebaseError:Missing or insufficient permission\r\n//try to add firebase.logout() after firebase.auth().signOut() in the authaction\r\n\r\n            //firebase.logout(); \r\n            dispatch({type:'SIGNOUT_SUCCESS'});\r\n        })\r\n\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport const signUp=(newUser)=>{\r\n    console.log(newUser)\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase=getFirebase();\r\n        const firestore=getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res)=>{\r\n            console.log(res);\r\n            //use the auth generated user Id from te firebase to create user file inside the firestore\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0]+newUser.lastName[0]\r\n            }) \r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch((error)=>{\r\n            dispatch({type:'SIGNUP_ERROR',error})\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className='right'>\r\n      <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n      <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLink';\r\nimport SignedOutLinks from './SignedOutLink';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar=(props)=> {\r\n    const {auth , profile }=props;\r\n    return (\r\n   <nav className=\"nav-wrapper grey darken-3\">\r\n       <div className=\"container\">\r\n        <Link to='/' className='brand-logo'>Project Management App</Link>\r\n        {auth.uid?<SignedInLinks profile={profile} />:<SignedOutLinks />}\r\n       </div>\r\n   </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    console.log(state)\r\n return {\r\n     auth:state.firebase.auth,\r\n     profile:state.firebase.profile\r\n }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from \"react\";\r\n\r\nfunction Notification({ notifications }) {\r\n  return (\r\n    <div className='section '>\r\n      <div className='card z-depth-1 blue lighten-2 white-text'>\r\n        <div className='card-content'>\r\n          <span className='card-title'>Notifications</span>\r\n          <ul className='notifications'>\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return(\r\n                  <li key={item.id}>\r\n                    <span className='red-text'>{item.user} </span>\r\n                    <span> {item.content}</span>\r\n                    <div className=\"note-date\">\r\n                        {item.time.toDate().toLocaleString()}\r\n                    </div>\r\n                    <br />\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\n\r\nconst ProjectsSummary = ({project}) => {\r\n  return (\r\n    <div className='card grey lighten-2 z-depth-1 project-summary'>\r\n      <div className='card-content grey-text text-darken-3'>\r\n        <span className='card-title'>{project.title}</span>\r\n        <p>{project.authorFirstName} {project.authorLastName}</p>\r\n        <p className='grey-text'>{project.createdAt.toDate().toLocaleDateString()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//toLocaleString(),change date object to a time string with date and time. '12/23/2008 9:28:20'\r\n//toLocaleDateString().change date object to a date only '12/23/2008'\r\n//toDateString(),change date object to a date string with format like 'Sun Dec 23 2008'\r\nexport default ProjectsSummary;\r\n","import React from \"react\";\r\nimport ProjectsSummary from \"./ProjectsSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className='project-list section'>\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link  key={project.id} to={\"/project/\" + project.id}>\r\n              <ProjectsSummary  project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Notification from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n        const { projects, auth ,notifications }=this.props;\r\n        if (!auth.uid) return <Redirect to=\"/signin\" />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    \r\n    /**console.log(state)\r\n     * {…}\r\n​       auth: Object {  }\r\n​       firestore: Object { status: {…}, data: {…}, ordered: {…}, … }\r\n​       project: Object { projects: (3) […] }\r\n​       <prototype>: Object { … }\r\n     */\r\n    return {\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notifications\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    firestoreConnect(()=>[{collection:'projects',orderBy:['createdAt','desc']},{collection:'notifications',limit:5,orderBy:['time','desc']}]),\r\n    connect(mapStateToProps)   \r\n)(Dashboard)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project,auth } = props;\r\n\r\n  if (!auth.uid){return <Redirect to='/signin' />}\r\n  if (project) {\r\n    return (\r\n      <div className='container section project-datails'>\r\n        <div className='card z-depth-0'>\r\n          <div className='card-content'>\r\n            <span className='card-title'>{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className='card-action grey lighten-4 grey-text'>\r\n            <div>Posted by {project.authorFirstName +project.authorLastName} </div>\r\n            <div>{project.createdAt.toDate().toDateString()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }else{\r\n      return(<div className=\"container center\">\r\n          <p>Loading project...</p>\r\n      </div>)\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  //console.log(state,ownProps);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects; //it is a object\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth:state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(() => [\"projects\"]),//sync projects collection from firestore into redux\r\n  connect(mapStateToProps)\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/Action/authAction\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Signin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { authError,auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.onSubmit}>\r\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\r\n          <div className='input-field'>\r\n            <label htmlFor='email'>Email</label>\r\n            <input type='email' id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className='input-field'>\r\n            <label htmlFor='password'>Password</label>\r\n            <input type='password' id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className='input-field'>\r\n            <button className='btn pink lighten-1 z-depth-0'>Login</button>\r\n    <div className='red-text'>{authError&&(<p>{authError}</p>)}</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (credentials) => dispatch(signIn(credentials)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth:state.firebase.auth\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/Action/authAction';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n      email:'',\r\n      password:'',\r\n      firstName:'',\r\n      lastName:''\r\n  };\r\n\r\n   onSubmit=(e)=>{\r\n       e.preventDefault();\r\n       //console.log(this.state)\r\n       this.props.signUp(this.state)\r\n  }\r\n\r\n   handleChange=(e)=>{\r\n      this.setState({[e.target.id]:e.target.value})\r\n  }\r\n\r\n  render() {\r\n    const {auth,authError}=this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.onSubmit} >\r\n          <h5 className='grey-text text-darken-3'>Sign Up</h5>\r\n          <div className='input-field'>\r\n            <label htmlFor='email'>Email</label>\r\n            <input type='email' id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className='input-field'>\r\n            <label htmlFor='password'>Password</label>\r\n            <input type='password' id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className='input-field'>\r\n            <label htmlFor='firstName'>First Name:</label>\r\n            <input type='text' id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className='input-field'>\r\n            <label htmlFor='lastName'>Last Name</label>\r\n            <input type='text' id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className='input-field'>\r\n            <button className='btn blue lighten-1 z-depth-0'>Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError?<p>{authError}</p>:null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    auth:state.firebase.auth,\r\n    authError:state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDisptachToProps=(dispatch)=>{\r\n  return {\r\n    signUp:(newuser)=>{dispatch(signUp(newuser))}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDisptachToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/Action/projectAction';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n      title:'',\r\n      content:''\r\n  };\r\n\r\n   onSubmit=(e)=>{\r\n       e.preventDefault();\r\n       this.props.createProject(this.state);\r\n       this.props.history.push('/')\r\n  }\r\n\r\n   handleChange=(e)=>{\r\n      this.setState({[e.target.id]:e.target.value})\r\n      \r\n  }\r\n\r\n  render() {\r\n    const {auth}=this.props;\r\n\r\n    if (!auth.uid){return <Redirect to='/signin' />}\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.onSubmit} >\r\n          <h5 className='grey-text text-darken-3'>Create a Project</h5>\r\n          <div className='input-field'>\r\n            <label htmlFor='title'>Project Title:</label>\r\n            <input type='text' id='title' onChange={this.handleChange} />\r\n          </div>\r\n          <div className='input-field'>\r\n            <label htmlFor='content'>Project Content:</label>\r\n            <textarea className=\"materialize-textarea\" type='text' id='content' onChange={this.handleChange} />\r\n          </div>\r\n          <div className='input-field'>\r\n            <button className='btn pink lighten-1 z-depth-0'>Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDisptachToProps=(dispatch)=>{\r\n  // console.log(\"dispatch\",dispatch);\r\n  //\"dispatch\" function createThunkMiddleware(action)\r\n  return {\r\n    createProject:(project)=>dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDisptachToProps)(CreateProject);\r\n\r\n//mapStateToProps is first paramaeter for the connect, when you don't need it, just put a null in it.","export const  createProject=(project)=>{\r\n    //when you use thunk , you can return a function\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n         // make a async call to database(firebase here)  -npm install react-redux-firebase redux-firestore\r\n        \r\n         //initiate firestore\r\n         const firestore=getFirestore();\r\n         const profile=getState().firebase.profile;\r\n         const authorId=getState().firebase.auth.uid;\r\n         firestore.collection('projects').add({\r\n             ...project,\r\n             authorFirstName:profile.firstName,\r\n             authorLastName:profile.lastName,\r\n             authorId:authorId,\r\n             createdAt: new Date()\r\n         })\r\n         .then(()=>{\r\n            dispatch({type:'CREATE_PROJECT',project});\r\n         })\r\n         .catch((err)=>{\r\n             dispatch({type:'CREATE_PROJECT_ERROR',err})\r\n         })\r\n        \r\n    }\r\n\r\n    \r\n}","import React from \"react\";\nimport { BrowserRouter ,Switch, Route } from \"react-router-dom\";\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/Signin';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nfunction App( ) {\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/project/:id' exact component={ProjectDetails} />\n        <Route path='/signin' exact component={SignIn} />\n        <Route path='/signup' exact component={SignUp} />\n        <Route path='/create' exact component={CreateProject} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError:null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\": {\r\n        console.log('login error')\r\n        return {\r\n            ...state,\r\n            authError:'Login failed'\r\n        }\r\n    }\r\n    case 'LOGIN_SUCCESS':{\r\n        console.log('success');\r\n        return {\r\n            ...state,\r\n            authError:null\r\n        }\r\n    }\r\n    case 'LOGOUT_SUCCESS':{\r\n        console.log('signout success');\r\n        return state\r\n    }\r\n    case 'SIGNUP_SUCCESS':{\r\n        console.log('signup success');\r\n        return {\r\n            ...state,\r\n            authError:null\r\n        }\r\n    }\r\n    case 'SIGNUP_ERROR':{\r\n        console.log('signup failed');\r\n        return {\r\n            ...state,\r\n            authError:action.error.message\r\n        }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"project 1\", content: \"project1\" },\r\n    { id: \"2\", title: \"project 2\", content: \"project2\" },\r\n    { id: \"3\", title: \"project 3\", content: \"project3\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":{\r\n      console.log(\"created project\", action.project);\r\n      return state\r\n    }\r\n    case 'CREATE_PROJECT_ERROR':{\r\n      console.log('create project error',action.err);\r\n      return state\r\n    }\r\n    default: return state  \r\n  }\r\n}\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer=combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n})\r\n\r\nexport default rootReducer;"," import firebase from 'firebase/app';\r\n import 'firebase/firestore'; //this is the database\r\n import 'firebase/auth'; //using firebase auth method\r\n import 'firebase/analytics';\r\n \r\n // Your web app's Firebase configuration\r\n export const fbConfig = {\r\n    apiKey:process.env.REACT_APP_APIKEY,\r\n    authDomain: \"redux-react-project-management.firebaseapp.com\",\r\n    databaseURL: \"https://redux-react-project-management.firebaseio.com\",\r\n    projectId: \"redux-react-project-management\",\r\n    storageBucket: \"redux-react-project-management.appspot.com\",\r\n    messagingSenderId: \"281827629007\",\r\n    appId:process.env.REACT_APP_APPID,\r\n    measurementId: \"G-4L2PEYDXSX\",\r\n    userProfile:'users', //get the firebase Profile information from fireStore's collection users based on the \r\n    useFirestoreForProfile:true //firestore for firebase Profile instead of Realtime DB\r\n  };\r\n\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(fbConfig);\r\n  // firebase.firestore().settings({timestampsInSnapshots:true}) is no longer required \r\n  firebase.analytics();\r\n  firebase.firestore();\r\n\r\n  export default firebase;\r\n\r\n  //with react-scripts@0.2.3 and higher, you can set env vairable starting with REACT_APP_<name> and \r\n //and access it by process.env.REACT_APP_<name> ,make sure you restart the server after set the env file\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  createFirestoreInstance,\n  getFirestore,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded,\n} from \"react-redux-firebase\";\nimport firebase, { fbConfig } from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),//apply to the action parameters\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n//the thunk can be used to delay the dispatch of an action or to dispatch only if a certain condition is met\n//the inner function received the store method dispatch and getstate\n\n\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, //needed if using firestore\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth); //useSelector is react-redux hook, similar to mapStateToProps\n  //console.log(auth)\n  if (!isLoaded(auth)) return <div>loading ...</div>;\n  return children;\n} //to prevent a glitch when you reflect the page. It allows the page waitting for firebase to figure out if user is logged in and then render the stuff to the DOM.\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}